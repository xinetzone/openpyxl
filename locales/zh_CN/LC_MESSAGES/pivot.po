# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 - 2022, See AUTHORS
# This file is distributed under the same license as the openpyxl package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: openpyxl 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-29 09:55+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../pivot.rst:2
msgid "Pivot Tables"
msgstr "数据透视表"

#: ../../pivot.rst:4
msgid ""
"openpyxl provides read-support for pivot tables so that they will be "
"preserved in existing files. The specification for pivot tables, while "
"extensive, is not very clear and it is not intended that client code "
"should be able to create pivot tables. However, it should be possible to "
"edit and manipulate existing pivot tables, eg. change their ranges or "
"whether they should update automatically settings."
msgstr ""
"openpyxl 为数据透视表提供了读取支持，因此它们将被保存在现有的文件中。"
"数据透视表的规范虽然广泛，但不是很清楚，它不打算让客户端代码能够创建数据透视表。"
"但是，应该可以编辑和操作现有的数据透视表，例如。更改它们的范围或是否应该自动更新设置。"

#: ../../pivot.rst:11
msgid ""
"As is the case for charts, images and tables there is currently no "
"management API for pivot tables so that client code will have to loop "
"over the ``_pivots`` list of a worksheet."
msgstr ""
"和图表、图片、表格一样，数据透视表没有专门管理的 API，因此客户端代码不得不遍历工作表 ``_pivots`` 列表"

#: ../../pivot.rst:17
msgid "Example"
msgstr "例子"

#: ../../pivot.rst:28
msgid "For further information see :class:`openpyxl.pivot.cache.CacheDefinition`"
msgstr "更多信息请查询 :class:`openpyxl.pivot.cache.CacheDefinition`"

