# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 - 2022, See AUTHORS
# This file is distributed under the same license as the openpyxl package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: openpyxl 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-29 09:55+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../api/openpyxl.styles.fills.rst:2
msgid "openpyxl.styles.fills module"
msgstr ""

#: of openpyxl.styles.fills.Fill:1 openpyxl.styles.fills.Stop:1
msgid "Bases: :py:class:`openpyxl.descriptors.serialisable.Serialisable`"
msgstr ""

#: of openpyxl.styles.fills.Fill:1
msgid "Base class"
msgstr ""

#: of openpyxl.styles.fills.Fill.from_tree:1
msgid "Create object from XML"
msgstr ""

#: of openpyxl.styles.fills.GradientFill:1 openpyxl.styles.fills.PatternFill:1
msgid "Bases: :py:class:`openpyxl.styles.fills.Fill`"
msgstr ""

#: of openpyxl.styles.fills.GradientFill:1
msgid "Fill areas with gradient"
msgstr ""

#: of openpyxl.styles.fills.GradientFill:3
msgid "Two types of gradient fill are supported:"
msgstr ""

#: of openpyxl.styles.fills.GradientFill:5
msgid ""
"A type='linear' gradient interpolates colours between a set of specified "
"Stops, across the length of an area. The gradient is left-to-right by "
"default, but this orientation can be modified with the degree attribute."
"  A list of Colors can be provided instead and they will be positioned "
"with equal distance between them."
msgstr ""

#: of openpyxl.styles.fills.GradientFill:12
#, python-format
msgid ""
"A type='path' gradient applies a linear gradient from each edge of the "
"area. Attributes top, right, bottom, left specify the extent of fill from"
" the respective borders. Thus top=\"0.2\" will fill the top 20% of the "
"cell."
msgstr ""

#: ../../docstring of openpyxl.styles.fills.GradientFill.bottom:1
#: openpyxl.styles.fills.GradientFill.degree:1
#: openpyxl.styles.fills.GradientFill.left:1
#: openpyxl.styles.fills.GradientFill.right:1
#: openpyxl.styles.fills.GradientFill.top:1
#: openpyxl.styles.fills.Stop.position:1
msgid "Values must be of type <class 'float'>"
msgstr ""

#: ../../docstring of openpyxl.styles.fills.GradientFill.fill_type:1
#: openpyxl.styles.fills.PatternFill.end_color:1
#: openpyxl.styles.fills.PatternFill.fill_type:1
#: openpyxl.styles.fills.PatternFill.start_color:1
msgid ""
"Aliases can be used when either the desired attribute name is not allowed"
" or confusing in Python (eg. \"type\") or a more descriptve name is "
"desired (eg. \"underline\" for \"u\")"
msgstr ""

#: ../../docstring of openpyxl.styles.fills.GradientFill.type:1
msgid "Value must be one of {'linear', 'path'}"
msgstr ""

#: of openpyxl.styles.fills.PatternFill:1
msgid ""
"Area fill patterns for use in styles. Caution: if you do not specify a "
"fill_type, other attributes will have no effect !"
msgstr ""

#: ../../docstring of openpyxl.styles.fills.PatternFill.bgColor:1
#: openpyxl.styles.fills.PatternFill.fgColor:1
#: openpyxl.styles.fills.Stop.color:1
msgid "Values must be of type <class 'openpyxl.styles.colors.Color'>"
msgstr ""

#: ../../docstring of openpyxl.styles.fills.PatternFill.patternType:1
msgid ""
"Value must be one of {'mediumGray', 'lightDown', 'darkGrid', 'darkGray', "
"'darkUp', 'darkVertical', 'darkHorizontal', 'lightHorizontal', "
"'lightVertical', 'solid', 'lightGrid', 'lightUp', 'lightGray', 'gray125',"
" 'gray0625', 'darkTrellis', 'darkDown', 'lightTrellis'}"
msgstr ""

#: of openpyxl.styles.fills.StopList:1
msgid "Bases: :py:class:`openpyxl.descriptors.sequence.Sequence`"
msgstr ""

