# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 - 2022, See AUTHORS
# This file is distributed under the same license as the openpyxl package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: openpyxl 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-29 09:55+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../api/openpyxl.worksheet.table.rst:2
msgid "openpyxl.worksheet.table module"
msgstr ""

#: of openpyxl.worksheet.table.Table:1 openpyxl.worksheet.table.TableColumn:1
#: openpyxl.worksheet.table.TableFormula:1
#: openpyxl.worksheet.table.TablePartList:1
#: openpyxl.worksheet.table.TableStyleInfo:1
#: openpyxl.worksheet.table.XMLColumnProps:1
msgid "Bases: :py:class:`openpyxl.descriptors.serialisable.Serialisable`"
msgstr ""

#: ../../docstring of openpyxl.worksheet.table.Table.autoFilter:1
msgid "Values must be of type <class 'openpyxl.worksheet.filters.AutoFilter'>"
msgstr ""

#: ../../docstring of openpyxl.worksheet.table.Table.comment:1
#: openpyxl.worksheet.table.Table.dataCellStyle:1
#: openpyxl.worksheet.table.Table.displayName:1
#: openpyxl.worksheet.table.Table.headerRowCellStyle:1
#: openpyxl.worksheet.table.Table.name:1
#: openpyxl.worksheet.table.Table.totalsRowCellStyle:1
#: openpyxl.worksheet.table.TableColumn.dataCellStyle:1
#: openpyxl.worksheet.table.TableColumn.headerRowCellStyle:1
#: openpyxl.worksheet.table.TableColumn.name:1
#: openpyxl.worksheet.table.TableColumn.totalsRowCellStyle:1
#: openpyxl.worksheet.table.TableColumn.totalsRowLabel:1
#: openpyxl.worksheet.table.TableColumn.uniqueName:1
#: openpyxl.worksheet.table.TableStyleInfo.name:1
#: openpyxl.worksheet.table.XMLColumnProps.xmlDataType:1
#: openpyxl.worksheet.table.XMLColumnProps.xpath:1
msgid "Values must be of type <class 'str'>"
msgstr ""

#: ../../docstring of openpyxl.worksheet.table.Table.connectionId:1
#: openpyxl.worksheet.table.Table.dataDxfId:1
#: openpyxl.worksheet.table.Table.headerRowBorderDxfId:1
#: openpyxl.worksheet.table.Table.headerRowCount:1
#: openpyxl.worksheet.table.Table.headerRowDxfId:1
#: openpyxl.worksheet.table.Table.id:1
#: openpyxl.worksheet.table.Table.tableBorderDxfId:1
#: openpyxl.worksheet.table.Table.totalsRowBorderDxfId:1
#: openpyxl.worksheet.table.Table.totalsRowCount:1
#: openpyxl.worksheet.table.Table.totalsRowDxfId:1
#: openpyxl.worksheet.table.TableColumn.dataDxfId:1
#: openpyxl.worksheet.table.TableColumn.headerRowDxfId:1
#: openpyxl.worksheet.table.TableColumn.id:1
#: openpyxl.worksheet.table.TableColumn.queryTableFieldId:1
#: openpyxl.worksheet.table.TableColumn.totalsRowDxfId:1
#: openpyxl.worksheet.table.XMLColumnProps.mapId:1
msgid "Values must be of type <class 'int'>"
msgstr ""

#: ../../docstring of openpyxl.worksheet.table.Table.extLst:1
#: openpyxl.worksheet.table.TableColumn.extLst:1
#: openpyxl.worksheet.table.XMLColumnProps.extLst:1
msgid "Values must be of type <class 'openpyxl.descriptors.excel.ExtensionList'>"
msgstr ""

#: ../../docstring of openpyxl.worksheet.table.Table.insertRow:1
#: openpyxl.worksheet.table.Table.insertRowShift:1
#: openpyxl.worksheet.table.Table.published:1
#: openpyxl.worksheet.table.Table.totalsRowShown:1
#: openpyxl.worksheet.table.TableFormula.array:1
#: openpyxl.worksheet.table.TableStyleInfo.showColumnStripes:1
#: openpyxl.worksheet.table.TableStyleInfo.showFirstColumn:1
#: openpyxl.worksheet.table.TableStyleInfo.showLastColumn:1
#: openpyxl.worksheet.table.TableStyleInfo.showRowStripes:1
#: openpyxl.worksheet.table.XMLColumnProps.denormalized:1
msgid "Values must be of type <class 'bool'>"
msgstr ""

#: of openpyxl.worksheet.table.Table.path:1
msgid "Return path within the archive"
msgstr ""

#: ../../docstring of openpyxl.worksheet.table.Table.sortState:1
msgid "Values must be of type <class 'openpyxl.worksheet.filters.SortState'>"
msgstr ""

#: ../../docstring of openpyxl.worksheet.table.Table.tableColumns:1
msgid "Wrap a sequence in an containing object"
msgstr ""

#: ../../docstring of openpyxl.worksheet.table.Table.tableStyleInfo:1
msgid "Values must be of type <class 'openpyxl.worksheet.table.TableStyleInfo'>"
msgstr ""

#: ../../docstring of openpyxl.worksheet.table.Table.tableType:1
msgid "Value must be one of {'worksheet', 'queryTable', 'xml'}"
msgstr ""

#: ../../docstring of
#: openpyxl.worksheet.table.TableColumn.calculatedColumnFormula:1
#: openpyxl.worksheet.table.TableColumn.totalsRowFormula:1
msgid "Values must be of type <class 'openpyxl.worksheet.table.TableFormula'>"
msgstr ""

#: of openpyxl.worksheet.table.TableColumn.from_tree:1
msgid "Create object from XML"
msgstr ""

#: ../../docstring of openpyxl.worksheet.table.TableColumn.totalsRowFunction:1
msgid ""
"Value must be one of {'sum', 'average', 'countNums', 'min', 'stdDev', "
"'max', 'custom', 'count', 'var'}"
msgstr ""

#: ../../docstring of openpyxl.worksheet.table.TableColumn.xmlColumnPr:1
msgid "Values must be of type <class 'openpyxl.worksheet.table.XMLColumnProps'>"
msgstr ""

#: ../../docstring of openpyxl.worksheet.table.TableFormula.text:1
msgid ""
"Aliases can be used when either the desired attribute name is not allowed"
" or confusing in Python (eg. \"type\") or a more descriptve name is "
"desired (eg. \"underline\" for \"u\")"
msgstr ""

#: of openpyxl.worksheet.table.TableList:1
msgid "Bases: :py:class:`dict`"
msgstr ""

#: of openpyxl.worksheet.table.TableList.get:1
msgid "Return the value for key if key is in the dictionary, else default."
msgstr ""

#: of openpyxl.worksheet.table.TableNameDescriptor:1
msgid "Bases: :py:class:`openpyxl.descriptors.base.String`"
msgstr ""

#: of openpyxl.worksheet.table.TableNameDescriptor:1
msgid "Table names cannot have spaces in them"
msgstr ""

#: ../../docstring of openpyxl.worksheet.table.TablePartList.tablePart:1
msgid ""
"A sequence (list or tuple) that may only contain objects of the declared "
"type"
msgstr ""

